#!/bin/bash --posix
o=${0##*/}
inval_arg() { echo "$o: invalid option -- $1, use $o $o to --help" >&2; exit 2; }

help_exit () {
	printf >&2 %s "Usage: $o <COMMAND|--help>
    -?|-h|--help: display this help and exit
    COMMAND: search in (help if bash), man, info, (tldr - assuming installed ) and at the end in the COMMAND with argument --help
($o in $o)"
}


while case $1 in -*):;;*)false;;esac; do
	case "$1" in
		'-?'|-h|--help) help_exit; exit 0;;
		'') help_exit; exit 2;;
		-x) set -x; shift;;
		--no-*)
			case "${1#--no-}" in
				help|bash-help) help=false ;;
				man) man=false ;;
				info) info=false ;;
				tldr)tldr=false ;;
				-help|--help) _help=false ;;
				*) inval_arg "$i";;
			esac
			shift
		;;
		# HELP)
		--) shift; brak;;
		-*) inval_arg "$1";;
	esac
done


done_in () { # (HELP_in_cmd, exit_code)
	[ "x$1" = xhelp ] && set -- 'bash:help'
	printf >&2 "(%s in %s)" "$o" "$1"
	if [ "$1" = tldr ]; then
		printf >&2 '\n ----------------\n'
	else
		exit "${2:-0}"
	fi
}

# IFS=-;set -- "$*" # conat args usging '-'
IFS='-'
# has_bash_help=$(command -v help)
for i in "${BASH:+${help:-help}}" "${man:-man}" "${info:-info}" "${tldr:-"$(command -v tldr 2>/dev/null)"}"
do "${i:-false}" "$*" 2>/dev/null && done_in "$i"
done
! [ "x$_help" = xfalse ] && command "$@" --help && done_in "--help"

printf >&2 %s '(nothing fond)'
exit 1

# tldr must be modefied to output error (not found) to etderr
# tldr "$1" | sed "s/tldr page for command $1 not found//"
